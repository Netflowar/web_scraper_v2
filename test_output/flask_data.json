{
  "https://flask.palletsprojects.com/en/2.3.x/": {
    "url": "https://flask.palletsprojects.com/en/2.3.x/",
    "title": "Welcome to Flask \u2014 Flask Documentation (3.1.x)",
    "headings": [
      {
        "level": 3,
        "text": "Navigation",
        "id": ""
      },
      {
        "level": 1,
        "text": "Welcome to Flask\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "User\u2019s Guide\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "API Reference\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "Additional Notes\u00b6",
        "id": ""
      },
      {
        "level": 3,
        "text": "Project Links",
        "id": ""
      },
      {
        "level": 3,
        "text": "Contents",
        "id": ""
      },
      {
        "level": 3,
        "text": "Quick search",
        "id": "searchlabel"
      }
    ],
    "code_blocks": [],
    "toc": [],
    "content": "Welcome to Flask\u00b6Welcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.Get started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.Flask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.User\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loopsAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line InterfaceAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nWelcome to Flask\u00b6Welcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.Get started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.Flask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.User\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loopsAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line InterfaceAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nWelcome to Flask\u00b6Welcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.Get started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.Flask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.User\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loopsAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line InterfaceAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nWelcome to Flask\u00b6Welcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.Get started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.Flask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.User\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loopsAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line InterfaceAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nWelcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.\n\nGet started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.\n\nFlask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.\n\nUser\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loops\n\nFlask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.\n\nInstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loops\n\nAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line Interface\n\nIf you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.\n\nAPIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line Interface\n\nAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nDesign Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nProject LinksDonatePyPI ReleasesSource CodeIssue TrackerChatContentsWelcome to FlaskUser\u2019s GuideAPI ReferenceAdditional NotesQuick search\n\nProject LinksDonatePyPI ReleasesSource CodeIssue TrackerChatContentsWelcome to FlaskUser\u2019s GuideAPI ReferenceAdditional NotesQuick search"
  },
  "https://flask.palletsprojects.com/en/2.3.x/genindex/": {
    "url": "https://flask.palletsprojects.com/en/2.3.x/genindex/",
    "title": "Index \u2014 Flask Documentation (3.1.x)",
    "headings": [
      {
        "level": 3,
        "text": "Navigation",
        "id": ""
      },
      {
        "level": 1,
        "text": "Index",
        "id": "index"
      },
      {
        "level": 2,
        "text": "_",
        "id": "_"
      },
      {
        "level": 2,
        "text": "A",
        "id": "A"
      },
      {
        "level": 2,
        "text": "B",
        "id": "B"
      },
      {
        "level": 2,
        "text": "C",
        "id": "C"
      },
      {
        "level": 2,
        "text": "D",
        "id": "D"
      },
      {
        "level": 2,
        "text": "E",
        "id": "E"
      },
      {
        "level": 2,
        "text": "F",
        "id": "F"
      },
      {
        "level": 2,
        "text": "G",
        "id": "G"
      },
      {
        "level": 2,
        "text": "H",
        "id": "H"
      },
      {
        "level": 2,
        "text": "I",
        "id": "I"
      },
      {
        "level": 2,
        "text": "J",
        "id": "J"
      },
      {
        "level": 2,
        "text": "K",
        "id": "K"
      },
      {
        "level": 2,
        "text": "L",
        "id": "L"
      },
      {
        "level": 2,
        "text": "M",
        "id": "M"
      },
      {
        "level": 2,
        "text": "N",
        "id": "N"
      },
      {
        "level": 2,
        "text": "O",
        "id": "O"
      },
      {
        "level": 2,
        "text": "P",
        "id": "P"
      },
      {
        "level": 2,
        "text": "Q",
        "id": "Q"
      },
      {
        "level": 2,
        "text": "R",
        "id": "R"
      },
      {
        "level": 2,
        "text": "S",
        "id": "S"
      },
      {
        "level": 2,
        "text": "T",
        "id": "T"
      },
      {
        "level": 2,
        "text": "U",
        "id": "U"
      },
      {
        "level": 2,
        "text": "V",
        "id": "V"
      },
      {
        "level": 2,
        "text": "W",
        "id": "W"
      },
      {
        "level": 2,
        "text": "Y",
        "id": "Y"
      },
      {
        "level": 3,
        "text": "Navigation",
        "id": ""
      },
      {
        "level": 3,
        "text": "Quick search",
        "id": "searchlabel"
      }
    ],
    "code_blocks": [],
    "toc": [],
    "content": "Index_|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|Y__AppCtxGlobals (class in flask.ctx)Aabort() (in module flask)aborter (flask.Flask attribute)aborter_class (flask.Flask attribute)accept_charsets (flask.Request property)accept_encodings (flask.Request property)accept_languages (flask.Request property)accept_mimetypes (flask.Request property)accept_ranges (flask.Response attribute)access_control_allow_credentials (flask.Response property)access_control_allow_headers (flask.Response attribute)access_control_allow_methods (flask.Response attribute)access_control_allow_origin (flask.Response attribute)access_control_expose_headers (flask.Response attribute)access_control_max_age (flask.Response attribute)access_control_request_headers (flask.Request attribute)access_control_request_method (flask.Request attribute)access_route (flask.Request property)accessed (flask.sessions.SecureCookieSession attribute)(flask.sessions.SessionMixin attribute)add_app_template_filter() (flask.Blueprint method)add_app_template_global() (flask.Blueprint method)add_app_template_test() (flask.Blueprint method)add_etag() (flask.Response method)add_template_filter() (flask.Flask method)add_template_global() (flask.Flask method)add_template_test() (flask.Flask method)add_url_rule() (flask.Blueprint method)(flask.blueprints.BlueprintSetupState method)(flask.Flask method)after_app_request() (flask.Blueprint method)after_request() (flask.Blueprint method)(flask.Flask method)after_request_funcs (flask.Blueprint attribute)(flask.Flask attribute)after_this_request() (in module flask)age (flask.Response attribute)allow (flask.Response property)app (flask.blueprints.BlueprintSetupState attribute)app_context() (flask.Flask method)app_context_processor() (flask.Blueprint method)app_ctx_globals_class (flask.Flask attribute)app_errorhandler() (flask.Blueprint method)app_import_path (flask.cli.ScriptInfo attribute)app_template_filter() (flask.Blueprint method)app_template_global() (flask.Blueprint method)app_template_test() (flask.Blueprint method)app_url_defaults() (flask.Blueprint method)app_url_value_preprocessor() (flask.Blueprint method)AppContext (class in flask.ctx)appcontext_popped (in module flask)appcontext_pushed (in module flask)appcontext_tearing_down (in module flask)AppGroup (class in flask.cli)application() (flask.Request class method)APPLICATION_ROOT (built-in variable)args (flask.Request property)as_view() (flask.views.View class method)async_to_sync() (flask.Flask method)authorization (flask.Request property)auto_find_instance_path() (flask.Flask method)autocorrect_location_header (flask.Response attribute)automatically_set_content_length (flask.Response attribute)Bbase_url (flask.Request property)before_app_request() (flask.Blueprint method)before_request() (flask.Blueprint method)(flask.Flask method)before_request_funcs (flask.Blueprint attribute)(flask.Flask attribute)Blueprint (class in flask)blueprint (flask.blueprints.BlueprintSetupState attribute)(flask.Request property)blueprints (flask.Flask attribute)(flask.Request property)BlueprintSetupState (class in flask.blueprints)Ccache_control (flask.Request property)(flask.Response property)calculate_content_length() (flask.Response method)call_on_close() (flask.Response method)check() (flask.json.tag.JSONTag method)clear() (flask.sessions.NullSession method)cli (flask.Blueprint attribute)(flask.Flask attribute)close() (flask.Request method)(flask.Response method)command() (flask.cli.AppGroup method)compact (flask.json.provider.DefaultJSONProvider attribute)Config (class in flask)config (flask.Flask attribute)config_class (flask.Flask attribute)content_encoding (flask.Request attribute)(flask.Response attribute)content_language (flask.Response property)content_length (flask.Request property)(flask.Response attribute)content_location (flask.Response attribute)content_md5 (flask.Request attribute)(flask.Response attribute)content_range (flask.Response property)content_security_policy (flask.Response property)content_security_policy_report_only (flask.Response property)content_type (flask.Request attribute)(flask.Response attribute)context_processor() (flask.Blueprint method)(flask.Flask method)cookies (flask.Request property)copy() (flask.ctx.RequestContext method)copy_current_request_context() (in module flask)create_app (flask.cli.ScriptInfo attribute)create_global_jinja_loader() (flask.Flask method)create_jinja_environment() (flask.Flask method)create_url_adapter() (flask.Flask method)cross_origin_embedder_policy (flask.Response attribute)cross_origin_opener_policy (flask.Response attribute)current_app (in module flask)Ddata (flask.cli.ScriptInfo attribute)(flask.Request property)(flask.Response property)date (flask.Request attribute)(flask.Response attribute)DEBUG (built-in variable)debug (flask.Flask property)decorators (flask.views.View attribute)default() (flask.json.provider.DefaultJSONProvider static method)default_mimetype (flask.Response attribute)default_status (flask.Response attribute)default_tags (flask.json.tag.TaggedJSONSerializer attribute)DefaultJSONProvider (class in flask.json.provider)delete() (flask.Blueprint method)(flask.Flask method)delete_cookie() (flask.Response method)dict_storage_class (flask.Request attribute)digest_method() (flask.sessions.SecureCookieSessionInterface static method)direct_passthrough (flask.Response attribute)dispatch_request() (flask.Flask method)(flask.views.MethodView method)(flask.views.View method)do_teardown_appcontext() (flask.Flask method)do_teardown_request() (flask.Flask method)dump() (flask.json.provider.JSONProvider method)(in module flask.json)dumps() (flask.json.provider.DefaultJSONProvider method)(flask.json.provider.JSONProvider method)(flask.json.tag.TaggedJSONSerializer method)(in module flask.json)Eendpoint (flask.Request property)endpoint() (flask.Blueprint method)(flask.Flask method)ensure_ascii (flask.json.provider.DefaultJSONProvider attribute)ensure_sync() (flask.Flask method)environ (flask.Request attribute)environment variableFLASK_DEBUGFLASK_ENVYOURAPPLICATION_SETTINGSerror_handler_spec (flask.Blueprint attribute)(flask.Flask attribute)errorhandler() (flask.Blueprint method)(flask.Flask method)expires (flask.Response attribute)EXPLAIN_TEMPLATE_LOADING (built-in variable)extensions (flask.Flask attribute)Ffiles (flask.Request property)first_registration (flask.blueprints.BlueprintSetupState attribute)flash() (in module flask)flaskmoduleFlask (class in flask)flask.globals.app_ctx (in module flask)flask.globals.request_ctx (in module flask)flask.jsonmoduleflask.json.tagmoduleFLASK_DEBUGFLASK_ENVFlaskClient (class in flask.testing)FlaskCliRunner (class in flask.testing)FlaskGroup (class in flask.cli)force_type() (flask.Response class method)form (flask.Request property)form_data_parser_class (flask.Request attribute)freeze() (flask.Response method)from_app() (flask.Response class method)from_envvar() (flask.Config method)from_file() (flask.Config method)from_mapping() (flask.Config method)from_object() (flask.Config method)from_prefixed_env() (flask.Config method)from_pyfile() (flask.Config method)from_values() (flask.Request class method)full_dispatch_request() (flask.Flask method)full_path (flask.Request property)Gg (in module flask)get() (flask.Blueprint method)(flask.ctx._AppCtxGlobals method)(flask.Flask method)(flask.sessions.SecureCookieSession method)get_app_iter() (flask.Response method)get_command() (flask.cli.FlaskGroup method)get_cookie_domain() (flask.sessions.SessionInterface method)get_cookie_httponly() (flask.sessions.SessionInterface method)get_cookie_name() (flask.sessions.SessionInterface method)get_cookie_partitioned() (flask.sessions.SessionInterface method)get_cookie_path() (flask.sessions.SessionInterface method)get_cookie_samesite() (flask.sessions.SessionInterface method)get_cookie_secure() (flask.sessions.SessionInterface method)get_data() (flask.Request method)(flask.Response method)get_etag() (flask.Response method)get_expiration_time() (flask.sessions.SessionInterface method)get_flashed_messages() (in module flask)get_json() (flask.Request method)(flask.Response method)get_namespace() (flask.Config method)get_send_file_max_age() (flask.Blueprint method)(flask.Flask method)get_template_attribute() (in module flask)get_wsgi_headers() (flask.Response method)get_wsgi_response() (flask.Response method)got_request_exception (in module flask)group() (flask.cli.AppGroup method)Hhandle_exception() (flask.Flask method)handle_http_exception() (flask.Flask method)handle_url_build_error() (flask.Flask method)handle_user_exception() (flask.Flask method)has_app_context() (in module flask)has_request_context() (in module flask)has_static_folder (flask.Blueprint property)(flask.Flask property)headers (flask.Request attribute)host (flask.Request property)host_url (flask.Request property)Iif_match (flask.Request property)if_modified_since (flask.Request property)if_none_match (flask.Request property)if_range (flask.Request property)if_unmodified_since (flask.Request property)implicit_sequence_conversion (flask.Response attribute)import_name (flask.Blueprint attribute)(flask.Flask attribute)init_every_request (flask.views.View attribute)inject_url_defaults() (flask.Flask method)input_stream (flask.Request attribute)instance_path (flask.Flask attribute)invoke() (flask.testing.FlaskCliRunner method)is_json (flask.Request property)(flask.Response property)is_multiprocess (flask.Request attribute)is_multithread (flask.Request attribute)is_null_session() (flask.sessions.SessionInterface method)is_run_once (flask.Request attribute)is_secure (flask.Request property)is_sequence (flask.Response property)is_streamed (flask.Response property)iter_blueprints() (flask.Flask method)iter_encoded() (flask.Response method)Jjinja_env (flask.Flask property)jinja_environment (flask.Flask attribute)jinja_loader (flask.Blueprint property)(flask.Flask property)jinja_options (flask.Flask attribute)json (flask.Flask attribute)(flask.Request property)(flask.Response property)json_provider_class (flask.Flask attribute)jsonify() (in module flask.json)JSONProvider (class in flask.json.provider)JSONTag (class in flask.json.tag)Kkey (flask.json.tag.JSONTag attribute)key_derivation (flask.sessions.SecureCookieSessionInterface attribute)Llast_modified (flask.Response attribute)list_commands() (flask.cli.FlaskGroup method)list_storage_class (flask.Request attribute)load() (flask.json.provider.JSONProvider method)(in module flask.json)load_app() (flask.cli.ScriptInfo method)load_dotenv() (in module flask.cli)load_dotenv_defaults (flask.cli.ScriptInfo attribute)loads() (flask.json.provider.DefaultJSONProvider method)(flask.json.provider.JSONProvider method)(flask.json.tag.TaggedJSONSerializer method)(in module flask.json)location (flask.Response attribute)log_exception() (flask.Flask method)logger (flask.Flask property)Mmake_aborter() (flask.Flask method)make_conditional() (flask.Response method)make_config() (flask.Flask method)make_context() (flask.cli.FlaskGroup method)make_default_options_response() (flask.Flask method)make_form_data_parser() (flask.Request method)make_null_session() (flask.sessions.SessionInterface method)make_response() (flask.Flask method)(in module flask)make_sequence() (flask.Response method)make_setup_state() (flask.Blueprint method)make_shell_context() (flask.Flask method)match_request() (flask.ctx.RequestContext method)MAX_CONTENT_LENGTH (built-in variable)max_content_length (flask.Request property)MAX_COOKIE_SIZE (built-in variable)max_cookie_size (flask.Response property)MAX_FORM_MEMORY_SIZE (built-in variable)max_form_memory_size (flask.Request property)MAX_FORM_PARTS (built-in variable)max_form_parts (flask.Request property)max_forwards (flask.Request attribute)message_flashed (in module flask)method (flask.Request attribute)methods (flask.views.View attribute)MethodView (class in flask.views)mimetype (flask.json.provider.DefaultJSONProvider attribute)(flask.Request property)(flask.Response property)mimetype_params (flask.Request property)(flask.Response property)modified (flask.session attribute)(flask.sessions.SecureCookieSession attribute)(flask.sessions.SessionMixin attribute)moduleflaskflask.jsonflask.json.tagNname (flask.Flask property)new (flask.session attribute)null_session_class (flask.sessions.SessionInterface attribute)NullSession (class in flask.sessions)Oon_json_loading_failed() (flask.Request method)open() (flask.testing.FlaskClient method)open_instance_resource() (flask.Flask method)open_resource() (flask.Blueprint method)(flask.Flask method)open_session() (flask.sessions.SecureCookieSessionInterface method)(flask.sessions.SessionInterface method)options (flask.blueprints.BlueprintSetupState attribute)origin (flask.Request attribute)Pparameter_storage_class (flask.Request attribute)parse_args() (flask.cli.FlaskGroup method)pass_script_info() (in module flask.cli)patch() (flask.Blueprint method)(flask.Flask method)path (flask.Request attribute)permanent (flask.session attribute)(flask.sessions.SessionMixin property)PERMANENT_SESSION_LIFETIME (built-in variable)permanent_session_lifetime (flask.Flask attribute)pickle_based (flask.sessions.SessionInterface attribute)pop() (flask.ctx._AppCtxGlobals method)(flask.ctx.AppContext method)(flask.ctx.RequestContext method)(flask.sessions.NullSession method)popitem() (flask.sessions.NullSession method)post() (flask.Blueprint method)(flask.Flask method)pragma (flask.Request property)PREFERRED_URL_SCHEME (built-in variable)preprocess_request() (flask.Flask method)process_response() (flask.Flask method)PROPAGATE_EXCEPTIONS (built-in variable)PROVIDE_AUTOMATIC_OPTIONS (built-in variable)provide_automatic_options (flask.views.View attribute)push() (flask.ctx.AppContext method)put() (flask.Blueprint method)(flask.Flask method)Python Enhancement ProposalsPEP 302PEP 3333,[1]PEP 451PEP 519Qquery_string (flask.Request attribute)Rrange (flask.Request property)record() (flask.Blueprint method)record_once() (flask.Blueprint method)redirect() (flask.Flask method)(in module flask)referrer (flask.Request attribute)register() (flask.Blueprint method)(flask.json.tag.TaggedJSONSerializer method)register_blueprint() (flask.Blueprint method)(flask.Flask method)register_error_handler() (flask.Blueprint method)(flask.Flask method)remote_addr (flask.Request attribute)remote_user (flask.Request attribute)render_template() (in module flask)render_template_string() (in module flask)Request (class in flask)request (in module flask)request_class (flask.Flask attribute)request_context() (flask.Flask method)request_finished (in module flask)request_started (in module flask)request_tearing_down (in module flask)RequestContext (class in flask.ctx)Response (class in flask)response (flask.Response attribute)response() (flask.json.provider.DefaultJSONProvider method)(flask.json.provider.JSONProvider method)response_class (flask.Flask attribute)retry_after (flask.Response property)RFCRFC 2231RFC 822RFC 8259,[1]root_path (flask.Blueprint attribute)(flask.Flask attribute)(flask.Request attribute)root_url (flask.Request property)route() (flask.Blueprint method)(flask.Flask method)routing_exception (flask.Request attribute)run() (flask.Flask method)run_command (in module flask.cli)Ssalt (flask.sessions.SecureCookieSessionInterface attribute)save_session() (flask.sessions.SecureCookieSessionInterface method)(flask.sessions.SessionInterface method)scheme (flask.Request attribute)script_root (flask.Request property)ScriptInfo (class in flask.cli)SECRET_KEY (built-in variable)secret_key (flask.Flask attribute)SECRET_KEY_FALLBACKS (built-in variable)SecureCookieSession (class in flask.sessions)SecureCookieSessionInterface (class in flask.sessions)select_jinja_autoescape() (flask.Flask method)send_file() (in module flask)SEND_FILE_MAX_AGE_DEFAULT (built-in variable)send_from_directory() (in module flask)send_static_file() (flask.Blueprint method)(flask.Flask method)serializer (flask.sessions.SecureCookieSessionInterface attribute)server (flask.Request attribute)SERVER_NAME (built-in variable)session (class in flask)session_class (flask.sessions.SecureCookieSessionInterface attribute)SESSION_COOKIE_DOMAIN (built-in variable)SESSION_COOKIE_HTTPONLY (built-in variable)SESSION_COOKIE_NAME (built-in variable)SESSION_COOKIE_PARTITIONED (built-in variable)SESSION_COOKIE_PATH (built-in variable)SESSION_COOKIE_SAMESITE (built-in variable)SESSION_COOKIE_SECURE (built-in variable)session_interface (flask.Flask attribute)SESSION_REFRESH_EACH_REQUEST (built-in variable)session_transaction() (flask.testing.FlaskClient method)SessionInterface (class in flask.sessions)SessionMixin (class in flask.sessions)set_cookie() (flask.Response method)set_data() (flask.Response method)set_etag() (flask.Response method)setdefault() (flask.ctx._AppCtxGlobals method)(flask.sessions.NullSession method)(flask.sessions.SecureCookieSession method)shallow (flask.Request attribute)shell_command (in module flask.cli)shell_context_processor() (flask.Flask method)shell_context_processors (flask.Flask attribute)should_ignore_error() (flask.Flask method)should_set_cookie() (flask.sessions.SessionInterface method)sort_keys (flask.json.provider.DefaultJSONProvider attribute)static_folder (flask.Blueprint property)(flask.Flask property)static_url_path (flask.Blueprint property)(flask.Flask property)status (flask.Response property)status_code (flask.Response property)stream (flask.Request property)(flask.Response property)stream_template() (in module flask)stream_template_string() (in module flask)stream_with_context() (in module flask)subdomain (flask.blueprints.BlueprintSetupState attribute)Ttag() (flask.json.tag.JSONTag method)(flask.json.tag.TaggedJSONSerializer method)TaggedJSONSerializer (class in flask.json.tag)teardown_app_request() (flask.Blueprint method)teardown_appcontext() (flask.Flask method)teardown_appcontext_funcs (flask.Flask attribute)teardown_request() (flask.Blueprint method)(flask.Flask method)teardown_request_funcs (flask.Blueprint attribute)(flask.Flask attribute)template_context_processors (flask.Blueprint attribute)(flask.Flask attribute)template_filter() (flask.Flask method)template_folder (flask.Blueprint attribute)(flask.Flask attribute)template_global() (flask.Flask method)template_rendered (in module flask)template_test() (flask.Flask method)TEMPLATES_AUTO_RELOAD (built-in variable)test_cli_runner() (flask.Flask method)test_cli_runner_class (flask.Flask attribute)test_client() (flask.Flask method)test_client_class (flask.Flask attribute)test_request_context() (flask.Flask method)TESTING (built-in variable)testing (flask.Flask attribute)to_json() (flask.json.tag.JSONTag method)to_python() (flask.json.tag.JSONTag method)TRAP_BAD_REQUEST_ERRORS (built-in variable)trap_http_exception() (flask.Flask method)TRAP_HTTP_EXCEPTIONS (built-in variable)TRUSTED_HOSTS (built-in variable)trusted_hosts (flask.Request attribute)Uuntag() (flask.json.tag.TaggedJSONSerializer method)update() (flask.sessions.NullSession method)update_template_context() (flask.Flask method)url (flask.Request property)url_build_error_handlers (flask.Flask attribute)url_default_functions (flask.Blueprint attribute)(flask.Flask attribute)url_defaults (flask.blueprints.BlueprintSetupState attribute)url_defaults() (flask.Blueprint method)(flask.Flask method)url_for() (flask.Flask method)(in module flask)url_map (flask.Flask attribute)url_map_class (flask.Flask attribute)url_prefix (flask.blueprints.BlueprintSetupState attribute)url_root (flask.Request property)url_rule (flask.Request attribute)url_rule_class (flask.Flask attribute)url_value_preprocessor() (flask.Blueprint method)(flask.Flask method)url_value_preprocessors (flask.Blueprint attribute)(flask.Flask attribute)USE_X_SENDFILE (built-in variable)user_agent (flask.Request property)user_agent_class (flask.Request attribute)Vvalues (flask.Request property)vary (flask.Response property)View (class in flask.views)view_args (flask.Request attribute)view_functions (flask.Blueprint attribute)(flask.Flask attribute)Wwant_form_data_parsed (flask.Request property)with_appcontext() (in module flask.cli)wsgi_app() (flask.Flask method)www_authenticate (flask.Response property)YYOURAPPLICATION_SETTINGS\n\nIndex_|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|Y__AppCtxGlobals (class in flask.ctx)Aabort() (in module flask)aborter (flask.Flask attribute)aborter_class (flask.Flask attribute)accept_charsets (flask.Request property)accept_encodings (flask.Request property)accept_languages (flask.Request property)accept_mimetypes (flask.Request property)accept_ranges (flask.Response attribute)access_control_allow_credentials (flask.Response property)access_control_allow_headers (flask.Response attribute)access_control_allow_methods (flask.Response attribute)access_control_allow_origin (flask.Response attribute)access_control_expose_headers (flask.Response attribute)access_control_max_age (flask.Response attribute)access_control_request_headers (flask.Request attribute)access_control_request_method (flask.Request attribute)access_route (flask.Request property)accessed (flask.sessions.SecureCookieSession attribute)(flask.sessions.SessionMixin attribute)add_app_template_filter() (flask.Blueprint method)add_app_template_global() (flask.Blueprint method)add_app_template_test() (flask.Blueprint method)add_etag() (flask.Response method)add_template_filter() (flask.Flask method)add_template_global() (flask.Flask method)add_template_test() (flask.Flask method)add_url_rule() (flask.Blueprint method)(flask.blueprints.BlueprintSetupState method)(flask.Flask method)after_app_request() (flask.Blueprint method)after_request() (flask.Blueprint method)(flask.Flask method)after_request_funcs (flask.Blueprint attribute)(flask.Flask attribute)after_this_request() (in module flask)age (flask.Response attribute)allow (flask.Response property)app (flask.blueprints.BlueprintSetupState attribute)app_context() (flask.Flask method)app_context_processor() (flask.Blueprint method)app_ctx_globals_class (flask.Flask attribute)app_errorhandler() (flask.Blueprint method)app_import_path (flask.cli.ScriptInfo attribute)app_template_filter() (flask.Blueprint method)app_template_global() (flask.Blueprint method)app_template_test() (flask.Blueprint method)app_url_defaults() (flask.Blueprint method)app_url_value_preprocessor() (flask.Blueprint method)AppContext (class in flask.ctx)appcontext_popped (in module flask)appcontext_pushed (in module flask)appcontext_tearing_down (in module flask)AppGroup (class in flask.cli)application() (flask.Request class method)APPLICATION_ROOT (built-in variable)args (flask.Request property)as_view() (flask.views.View class method)async_to_sync() (flask.Flask method)authorization (flask.Request property)auto_find_instance_path() (flask.Flask method)autocorrect_location_header (flask.Response attribute)automatically_set_content_length (flask.Response attribute)Bbase_url (flask.Request property)before_app_request() (flask.Blueprint method)before_request() (flask.Blueprint method)(flask.Flask method)before_request_funcs (flask.Blueprint attribute)(flask.Flask attribute)Blueprint (class in flask)blueprint (flask.blueprints.BlueprintSetupState attribute)(flask.Request property)blueprints (flask.Flask attribute)(flask.Request property)BlueprintSetupState (class in flask.blueprints)Ccache_control (flask.Request property)(flask.Response property)calculate_content_length() (flask.Response method)call_on_close() (flask.Response method)check() (flask.json.tag.JSONTag method)clear() (flask.sessions.NullSession method)cli (flask.Blueprint attribute)(flask.Flask attribute)close() (flask.Request method)(flask.Response method)command() (flask.cli.AppGroup method)compact (flask.json.provider.DefaultJSONProvider attribute)Config (class in flask)config (flask.Flask attribute)config_class (flask.Flask attribute)content_encoding (flask.Request attribute)(flask.Response attribute)content_language (flask.Response property)content_length (flask.Request property)(flask.Response attribute)content_location (flask.Response attribute)content_md5 (flask.Request attribute)(flask.Response attribute)content_range (flask.Response property)content_security_policy (flask.Response property)content_security_policy_report_only (flask.Response property)content_type (flask.Request attribute)(flask.Response attribute)context_processor() (flask.Blueprint method)(flask.Flask method)cookies (flask.Request property)copy() (flask.ctx.RequestContext method)copy_current_request_context() (in module flask)create_app (flask.cli.ScriptInfo attribute)create_global_jinja_loader() (flask.Flask method)create_jinja_environment() (flask.Flask method)create_url_adapter() (flask.Flask method)cross_origin_embedder_policy (flask.Response attribute)cross_origin_opener_policy (flask.Response attribute)current_app (in module flask)Ddata (flask.cli.ScriptInfo attribute)(flask.Request property)(flask.Response property)date (flask.Request attribute)(flask.Response attribute)DEBUG (built-in variable)debug (flask.Flask property)decorators (flask.views.View attribute)default() (flask.json.provider.DefaultJSONProvider static method)default_mimetype (flask.Response attribute)default_status (flask.Response attribute)default_tags (flask.json.tag.TaggedJSONSerializer attribute)DefaultJSONProvider (class in flask.json.provider)delete() (flask.Blueprint method)(flask.Flask method)delete_cookie() (flask.Response method)dict_storage_class (flask.Request attribute)digest_method() (flask.sessions.SecureCookieSessionInterface static method)direct_passthrough (flask.Response attribute)dispatch_request() (flask.Flask method)(flask.views.MethodView method)(flask.views.View method)do_teardown_appcontext() (flask.Flask method)do_teardown_request() (flask.Flask method)dump() (flask.json.provider.JSONProvider method)(in module flask.json)dumps() (flask.json.provider.DefaultJSONProvider method)(flask.json.provider.JSONProvider method)(flask.json.tag.TaggedJSONSerializer method)(in module flask.json)Eendpoint (flask.Request property)endpoint() (flask.Blueprint method)(flask.Flask method)ensure_ascii (flask.json.provider.DefaultJSONProvider attribute)ensure_sync() (flask.Flask method)environ (flask.Request attribute)environment variableFLASK_DEBUGFLASK_ENVYOURAPPLICATION_SETTINGSerror_handler_spec (flask.Blueprint attribute)(flask.Flask attribute)errorhandler() (flask.Blueprint method)(flask.Flask method)expires (flask.Response attribute)EXPLAIN_TEMPLATE_LOADING (built-in variable)extensions (flask.Flask attribute)Ffiles (flask.Request property)first_registration (flask.blueprints.BlueprintSetupState attribute)flash() (in module flask)flaskmoduleFlask (class in flask)flask.globals.app_ctx (in module flask)flask.globals.request_ctx (in module flask)flask.jsonmoduleflask.json.tagmoduleFLASK_DEBUGFLASK_ENVFlaskClient (class in flask.testing)FlaskCliRunner (class in flask.testing)FlaskGroup (class in flask.cli)force_type() (flask.Response class method)form (flask.Request property)form_data_parser_class (flask.Request attribute)freeze() (flask.Response method)from_app() (flask.Response class method)from_envvar() (flask.Config method)from_file() (flask.Config method)from_mapping() (flask.Config method)from_object() (flask.Config method)from_prefixed_env() (flask.Config method)from_pyfile() (flask.Config method)from_values() (flask.Request class method)full_dispatch_request() (flask.Flask method)full_path (flask.Request property)Gg (in module flask)get() (flask.Blueprint method)(flask.ctx._AppCtxGlobals method)(flask.Flask method)(flask.sessions.SecureCookieSession method)get_app_iter() (flask.Response method)get_command() (flask.cli.FlaskGroup method)get_cookie_domain() (flask.sessions.SessionInterface method)get_cookie_httponly() (flask.sessions.SessionInterface method)get_cookie_name() (flask.sessions.SessionInterface method)get_cookie_partitioned() (flask.sessions.SessionInterface method)get_cookie_path() (flask.sessions.SessionInterface method)get_cookie_samesite() (flask.sessions.SessionInterface method)get_cookie_secure() (flask.sessions.SessionInterface method)get_data() (flask.Request method)(flask.Response method)get_etag() (flask.Response method)get_expiration_time() (flask.sessions.SessionInterface method)get_flashed_messages() (in module flask)get_json() (flask.Request method)(flask.Response method)get_namespace() (flask.Config method)get_send_file_max_age() (flask.Blueprint method)(flask.Flask method)get_template_attribute() (in module flask)get_wsgi_headers() (flask.Response method)get_wsgi_response() (flask.Response method)got_request_exception (in module flask)group() (flask.cli.AppGroup method)Hhandle_exception() (flask.Flask method)handle_http_exception() (flask.Flask method)handle_url_build_error() (flask.Flask method)handle_user_exception() (flask.Flask method)has_app_context() (in module flask)has_request_context() (in module flask)has_static_folder (flask.Blueprint property)(flask.Flask property)headers (flask.Request attribute)host (flask.Request property)host_url (flask.Request property)Iif_match (flask.Request property)if_modified_since (flask.Request property)if_none_match (flask.Request property)if_range (flask.Request property)if_unmodified_since (flask.Request property)implicit_sequence_conversion (flask.Response attribute)import_name (flask.Blueprint attribute)(flask.Flask attribute)init_every_request (flask.views.View attribute)inject_url_defaults() (flask.Flask method)input_stream (flask.Request attribute)instance_path (flask.Flask attribute)invoke() (flask.testing.FlaskCliRunner method)is_json (flask.Request property)(flask.Response property)is_multiprocess (flask.Request attribute)is_multithread (flask.Request attribute)is_null_session() (flask.sessions.SessionInterface method)is_run_once (flask.Request attribute)is_secure (flask.Request property)is_sequence (flask.Response property)is_streamed (flask.Response property)iter_blueprints() (flask.Flask method)iter_encoded() (flask.Response method)Jjinja_env (flask.Flask property)jinja_environment (flask.Flask attribute)jinja_loader (flask.Blueprint property)(flask.Flask property)jinja_options (flask.Flask attribute)json (flask.Flask attribute)(flask.Request property)(flask.Response property)json_provider_class (flask.Flask attribute)jsonify() (in module flask.json)JSONProvider (class in flask.json.provider)JSONTag (class in flask.json.tag)Kkey (flask.json.tag.JSONTag attribute)key_derivation (flask.sessions.SecureCookieSessionInterface attribute)Llast_modified (flask.Response attribute)list_commands() (flask.cli.FlaskGroup method)list_storage_class (flask.Request attribute)load() (flask.json.provider.JSONProvider method)(in module flask.json)load_app() (flask.cli.ScriptInfo method)load_dotenv() (in module flask.cli)load_dotenv_defaults (flask.cli.ScriptInfo attribute)loads() (flask.json.provider.DefaultJSONProvider method)(flask.json.provider.JSONProvider method)(flask.json.tag.TaggedJSONSerializer method)(in module flask.json)location (flask.Response attribute)log_exception() (flask.Flask method)logger (flask.Flask property)Mmake_aborter() (flask.Flask method)make_conditional() (flask.Response method)make_config() (flask.Flask method)make_context() (flask.cli.FlaskGroup method)make_default_options_response() (flask.Flask method)make_form_data_parser() (flask.Request method)make_null_session() (flask.sessions.SessionInterface method)make_response() (flask.Flask method)(in module flask)make_sequence() (flask.Response method)make_setup_state() (flask.Blueprint method)make_shell_context() (flask.Flask method)match_request() (flask.ctx.RequestContext method)MAX_CONTENT_LENGTH (built-in variable)max_content_length (flask.Request property)MAX_COOKIE_SIZE (built-in variable)max_cookie_size (flask.Response property)MAX_FORM_MEMORY_SIZE (built-in variable)max_form_memory_size (flask.Request property)MAX_FORM_PARTS (built-in variable)max_form_parts (flask.Request property)max_forwards (flask.Request attribute)message_flashed (in module flask)method (flask.Request attribute)methods (flask.views.View attribute)MethodView (class in flask.views)mimetype (flask.json.provider.DefaultJSONProvider attribute)(flask.Request property)(flask.Response property)mimetype_params (flask.Request property)(flask.Response property)modified (flask.session attribute)(flask.sessions.SecureCookieSession attribute)(flask.sessions.SessionMixin attribute)moduleflaskflask.jsonflask.json.tagNname (flask.Flask property)new (flask.session attribute)null_session_class (flask.sessions.SessionInterface attribute)NullSession (class in flask.sessions)Oon_json_loading_failed() (flask.Request method)open() (flask.testing.FlaskClient method)open_instance_resource() (flask.Flask method)open_resource() (flask.Blueprint method)(flask.Flask method)open_session() (flask.sessions.SecureCookieSessionInterface method)(flask.sessions.SessionInterface method)options (flask.blueprints.BlueprintSetupState attribute)origin (flask.Request attribute)Pparameter_storage_class (flask.Request attribute)parse_args() (flask.cli.FlaskGroup method)pass_script_info() (in module flask.cli)patch() (flask.Blueprint method)(flask.Flask method)path (flask.Request attribute)permanent (flask.session attribute)(flask.sessions.SessionMixin property)PERMANENT_SESSION_LIFETIME (built-in variable)permanent_session_lifetime (flask.Flask attribute)pickle_based (flask.sessions.SessionInterface attribute)pop() (flask.ctx._AppCtxGlobals method)(flask.ctx.AppContext method)(flask.ctx.RequestContext method)(flask.sessions.NullSession method)popitem() (flask.sessions.NullSession method)post() (flask.Blueprint method)(flask.Flask method)pragma (flask.Request property)PREFERRED_URL_SCHEME (built-in variable)preprocess_request() (flask.Flask method)process_response() (flask.Flask method)PROPAGATE_EXCEPTIONS (built-in variable)PROVIDE_AUTOMATIC_OPTIONS (built-in variable)provide_automatic_options (flask.views.View attribute)push() (flask.ctx.AppContext method)put() (flask.Blueprint method)(flask.Flask method)Python Enhancement ProposalsPEP 302PEP 3333,[1]PEP 451PEP 519Qquery_string (flask.Request attribute)Rrange (flask.Request property)record() (flask.Blueprint method)record_once() (flask.Blueprint method)redirect() (flask.Flask method)(in module flask)referrer (flask.Request attribute)register() (flask.Blueprint method)(flask.json.tag.TaggedJSONSerializer method)register_blueprint() (flask.Blueprint method)(flask.Flask method)register_error_handler() (flask.Blueprint method)(flask.Flask method)remote_addr (flask.Request attribute)remote_user (flask.Request attribute)render_template() (in module flask)render_template_string() (in module flask)Request (class in flask)request (in module flask)request_class (flask.Flask attribute)request_context() (flask.Flask method)request_finished (in module flask)request_started (in module flask)request_tearing_down (in module flask)RequestContext (class in flask.ctx)Response (class in flask)response (flask.Response attribute)response() (flask.json.provider.DefaultJSONProvider method)(flask.json.provider.JSONProvider method)response_class (flask.Flask attribute)retry_after (flask.Response property)RFCRFC 2231RFC 822RFC 8259,[1]root_path (flask.Blueprint attribute)(flask.Flask attribute)(flask.Request attribute)root_url (flask.Request property)route() (flask.Blueprint method)(flask.Flask method)routing_exception (flask.Request attribute)run() (flask.Flask method)run_command (in module flask.cli)Ssalt (flask.sessions.SecureCookieSessionInterface attribute)save_session() (flask.sessions.SecureCookieSessionInterface method)(flask.sessions.SessionInterface method)scheme (flask.Request attribute)script_root (flask.Request property)ScriptInfo (class in flask.cli)SECRET_KEY (built-in variable)secret_key (flask.Flask attribute)SECRET_KEY_FALLBACKS (built-in variable)SecureCookieSession (class in flask.sessions)SecureCookieSessionInterface (class in flask.sessions)select_jinja_autoescape() (flask.Flask method)send_file() (in module flask)SEND_FILE_MAX_AGE_DEFAULT (built-in variable)send_from_directory() (in module flask)send_static_file() (flask.Blueprint method)(flask.Flask method)serializer (flask.sessions.SecureCookieSessionInterface attribute)server (flask.Request attribute)SERVER_NAME (built-in variable)session (class in flask)session_class (flask.sessions.SecureCookieSessionInterface attribute)SESSION_COOKIE_DOMAIN (built-in variable)SESSION_COOKIE_HTTPONLY (built-in variable)SESSION_COOKIE_NAME (built-in variable)SESSION_COOKIE_PARTITIONED (built-in variable)SESSION_COOKIE_PATH (built-in variable)SESSION_COOKIE_SAMESITE (built-in variable)SESSION_COOKIE_SECURE (built-in variable)session_interface (flask.Flask attribute)SESSION_REFRESH_EACH_REQUEST (built-in variable)session_transaction() (flask.testing.FlaskClient method)SessionInterface (class in flask.sessions)SessionMixin (class in flask.sessions)set_cookie() (flask.Response method)set_data() (flask.Response method)set_etag() (flask.Response method)setdefault() (flask.ctx._AppCtxGlobals method)(flask.sessions.NullSession method)(flask.sessions.SecureCookieSession method)shallow (flask.Request attribute)shell_command (in module flask.cli)shell_context_processor() (flask.Flask method)shell_context_processors (flask.Flask attribute)should_ignore_error() (flask.Flask method)should_set_cookie() (flask.sessions.SessionInterface method)sort_keys (flask.json.provider.DefaultJSONProvider attribute)static_folder (flask.Blueprint property)(flask.Flask property)static_url_path (flask.Blueprint property)(flask.Flask property)status (flask.Response property)status_code (flask.Response property)stream (flask.Request property)(flask.Response property)stream_template() (in module flask)stream_template_string() (in module flask)stream_with_context() (in module flask)subdomain (flask.blueprints.BlueprintSetupState attribute)Ttag() (flask.json.tag.JSONTag method)(flask.json.tag.TaggedJSONSerializer method)TaggedJSONSerializer (class in flask.json.tag)teardown_app_request() (flask.Blueprint method)teardown_appcontext() (flask.Flask method)teardown_appcontext_funcs (flask.Flask attribute)teardown_request() (flask.Blueprint method)(flask.Flask method)teardown_request_funcs (flask.Blueprint attribute)(flask.Flask attribute)template_context_processors (flask.Blueprint attribute)(flask.Flask attribute)template_filter() (flask.Flask method)template_folder (flask.Blueprint attribute)(flask.Flask attribute)template_global() (flask.Flask method)template_rendered (in module flask)template_test() (flask.Flask method)TEMPLATES_AUTO_RELOAD (built-in variable)test_cli_runner() (flask.Flask method)test_cli_runner_class (flask.Flask attribute)test_client() (flask.Flask method)test_client_class (flask.Flask attribute)test_request_context() (flask.Flask method)TESTING (built-in variable)testing (flask.Flask attribute)to_json() (flask.json.tag.JSONTag method)to_python() (flask.json.tag.JSONTag method)TRAP_BAD_REQUEST_ERRORS (built-in variable)trap_http_exception() (flask.Flask method)TRAP_HTTP_EXCEPTIONS (built-in variable)TRUSTED_HOSTS (built-in variable)trusted_hosts (flask.Request attribute)Uuntag() (flask.json.tag.TaggedJSONSerializer method)update() (flask.sessions.NullSession method)update_template_context() (flask.Flask method)url (flask.Request property)url_build_error_handlers (flask.Flask attribute)url_default_functions (flask.Blueprint attribute)(flask.Flask attribute)url_defaults (flask.blueprints.BlueprintSetupState attribute)url_defaults() (flask.Blueprint method)(flask.Flask method)url_for() (flask.Flask method)(in module flask)url_map (flask.Flask attribute)url_map_class (flask.Flask attribute)url_prefix (flask.blueprints.BlueprintSetupState attribute)url_root (flask.Request property)url_rule (flask.Request attribute)url_rule_class (flask.Flask attribute)url_value_preprocessor() (flask.Blueprint method)(flask.Flask method)url_value_preprocessors (flask.Blueprint attribute)(flask.Flask attribute)USE_X_SENDFILE (built-in variable)user_agent (flask.Request property)user_agent_class (flask.Request attribute)Vvalues (flask.Request property)vary (flask.Response property)View (class in flask.views)view_args (flask.Request attribute)view_functions (flask.Blueprint attribute)(flask.Flask attribute)Wwant_form_data_parsed (flask.Request property)with_appcontext() (in module flask.cli)wsgi_app() (flask.Flask method)www_authenticate (flask.Response property)YYOURAPPLICATION_SETTINGS\n\nIndex_|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|Y__AppCtxGlobals (class in flask.ctx)Aabort() (in module flask)aborter (flask.Flask attribute)aborter_class (flask.Flask attribute)accept_charsets (flask.Request property)accept_encodings (flask.Request property)accept_languages (flask.Request property)accept_mimetypes (flask.Request property)accept_ranges (flask.Response attribute)access_control_allow_credentials (flask.Response property)access_control_allow_headers (flask.Response attribute)access_control_allow_methods (flask.Response attribute)access_control_allow_origin (flask.Response attribute)access_control_expose_headers (flask.Response attribute)access_control_max_age (flask.Response attribute)access_control_request_headers (flask.Request attribute)access_control_request_method (flask.Request attribute)access_route (flask.Request property)accessed (flask.sessions.SecureCookieSession attribute)(flask.sessions.SessionMixin attribute)add_app_template_filter() (flask.Blueprint method)add_app_template_global() (flask.Blueprint method)add_app_template_test() (flask.Blueprint method)add_etag() (flask.Response method)add_template_filter() (flask.Flask method)add_template_global() (flask.Flask method)add_template_test() (flask.Flask method)add_url_rule() (flask.Blueprint method)(flask.blueprints.BlueprintSetupState method)(flask.Flask method)after_app_request() (flask.Blueprint method)after_request() (flask.Blueprint method)(flask.Flask method)after_request_funcs (flask.Blueprint attribute)(flask.Flask attribute)after_this_request() (in module flask)age (flask.Response attribute)allow (flask.Response property)app (flask.blueprints.BlueprintSetupState attribute)app_context() (flask.Flask method)app_context_processor() (flask.Blueprint method)app_ctx_globals_class (flask.Flask attribute)app_errorhandler() (flask.Blueprint method)app_import_path (flask.cli.ScriptInfo attribute)app_template_filter() (flask.Blueprint method)app_template_global() (flask.Blueprint method)app_template_test() (flask.Blueprint method)app_url_defaults() (flask.Blueprint method)app_url_value_preprocessor() (flask.Blueprint method)AppContext (class in flask.ctx)appcontext_popped (in module flask)appcontext_pushed (in module flask)appcontext_tearing_down (in module flask)AppGroup (class in flask.cli)application() (flask.Request class method)APPLICATION_ROOT (built-in variable)args (flask.Request property)as_view() (flask.views.View class method)async_to_sync() (flask.Flask method)authorization (flask.Request property)auto_find_instance_path() (flask.Flask method)autocorrect_location_header (flask.Response attribute)automatically_set_content_length (flask.Response attribute)Bbase_url (flask.Request property)before_app_request() (flask.Blueprint method)before_request() (flask.Blueprint method)(flask.Flask method)before_request_funcs (flask.Blueprint attribute)(flask.Flask attribute)Blueprint (class in flask)blueprint (flask.blueprints.BlueprintSetupState attribute)(flask.Request property)blueprints (flask.Flask attribute)(flask.Request property)BlueprintSetupState (class in flask.blueprints)Ccache_control (flask.Request property)(flask.Response property)calculate_content_length() (flask.Response method)call_on_close() (flask.Response method)check() (flask.json.tag.JSONTag method)clear() (flask.sessions.NullSession method)cli (flask.Blueprint attribute)(flask.Flask attribute)close() (flask.Request method)(flask.Response method)command() (flask.cli.AppGroup method)compact (flask.json.provider.DefaultJSONProvider attribute)Config (class in flask)config (flask.Flask attribute)config_class (flask.Flask attribute)content_encoding (flask.Request attribute)(flask.Response attribute)content_language (flask.Response property)content_length (flask.Request property)(flask.Response attribute)content_location (flask.Response attribute)content_md5 (flask.Request attribute)(flask.Response attribute)content_range (flask.Response property)content_security_policy (flask.Response property)content_security_policy_report_only (flask.Response property)content_type (flask.Request attribute)(flask.Response attribute)context_processor() (flask.Blueprint method)(flask.Flask method)cookies (flask.Request property)copy() (flask.ctx.RequestContext method)copy_current_request_context() (in module flask)create_app (flask.cli.ScriptInfo attribute)create_global_jinja_loader() (flask.Flask method)create_jinja_environment() (flask.Flask method)create_url_adapter() (flask.Flask method)cross_origin_embedder_policy (flask.Response attribute)cross_origin_opener_policy (flask.Response attribute)current_app (in module flask)Ddata (flask.cli.ScriptInfo attribute)(flask.Request property)(flask.Response property)date (flask.Request attribute)(flask.Response attribute)DEBUG (built-in variable)debug (flask.Flask property)decorators (flask.views.View attribute)default() (flask.json.provider.DefaultJSONProvider static method)default_mimetype (flask.Response attribute)default_status (flask.Response attribute)default_tags (flask.json.tag.TaggedJSONSerializer attribute)DefaultJSONProvider (class in flask.json.provider)delete() (flask.Blueprint method)(flask.Flask method)delete_cookie() (flask.Response method)dict_storage_class (flask.Request attribute)digest_method() (flask.sessions.SecureCookieSessionInterface static method)direct_passthrough (flask.Response attribute)dispatch_request() (flask.Flask method)(flask.views.MethodView method)(flask.views.View method)do_teardown_appcontext() (flask.Flask method)do_teardown_request() (flask.Flask method)dump() (flask.json.provider.JSONProvider method)(in module flask.json)dumps() (flask.json.provider.DefaultJSONProvider method)(flask.json.provider.JSONProvider method)(flask.json.tag.TaggedJSONSerializer method)(in module flask.json)Eendpoint (flask.Request property)endpoint() (flask.Blueprint method)(flask.Flask method)ensure_ascii (flask.json.provider.DefaultJSONProvider attribute)ensure_sync() (flask.Flask method)environ (flask.Request attribute)environment variableFLASK_DEBUGFLASK_ENVYOURAPPLICATION_SETTINGSerror_handler_spec (flask.Blueprint attribute)(flask.Flask attribute)errorhandler() (flask.Blueprint method)(flask.Flask method)expires (flask.Response attribute)EXPLAIN_TEMPLATE_LOADING (built-in variable)extensions (flask.Flask attribute)Ffiles (flask.Request property)first_registration (flask.blueprints.BlueprintSetupState attribute)flash() (in module flask)flaskmoduleFlask (class in flask)flask.globals.app_ctx (in module flask)flask.globals.request_ctx (in module flask)flask.jsonmoduleflask.json.tagmoduleFLASK_DEBUGFLASK_ENVFlaskClient (class in flask.testing)FlaskCliRunner (class in flask.testing)FlaskGroup (class in flask.cli)force_type() (flask.Response class method)form (flask.Request property)form_data_parser_class (flask.Request attribute)freeze() (flask.Response method)from_app() (flask.Response class method)from_envvar() (flask.Config method)from_file() (flask.Config method)from_mapping() (flask.Config method)from_object() (flask.Config method)from_prefixed_env() (flask.Config method)from_pyfile() (flask.Config method)from_values() (flask.Request class method)full_dispatch_request() (flask.Flask method)full_path (flask.Request property)Gg (in module flask)get() (flask.Blueprint method)(flask.ctx._AppCtxGlobals method)(flask.Flask method)(flask.sessions.SecureCookieSession method)get_app_iter() (flask.Response method)get_command() (flask.cli.FlaskGroup method)get_cookie_domain() (flask.sessions.SessionInterface method)get_cookie_httponly() (flask.sessions.SessionInterface method)get_cookie_name() (flask.sessions.SessionInterface method)get_cookie_partitioned() (flask.sessions.SessionInterface method)get_cookie_path() (flask.sessions.SessionInterface method)get_cookie_samesite() (flask.sessions.SessionInterface method)get_cookie_secure() (flask.sessions.SessionInterface method)get_data() (flask.Request method)(flask.Response method)get_etag() (flask.Response method)get_expiration_time() (flask.sessions.SessionInterface method)get_flashed_messages() (in module flask)get_json() (flask.Request method)(flask.Response method)get_namespace() (flask.Config method)get_send_file_max_age() (flask.Blueprint method)(flask.Flask method)get_template_attribute() (in module flask)get_wsgi_headers() (flask.Response method)get_wsgi_response() (flask.Response method)got_request_exception (in module flask)group() (flask.cli.AppGroup method)Hhandle_exception() (flask.Flask method)handle_http_exception() (flask.Flask method)handle_url_build_error() (flask.Flask method)handle_user_exception() (flask.Flask method)has_app_context() (in module flask)has_request_context() (in module flask)has_static_folder (flask.Blueprint property)(flask.Flask property)headers (flask.Request attribute)host (flask.Request property)host_url (flask.Request property)Iif_match (flask.Request property)if_modified_since (flask.Request property)if_none_match (flask.Request property)if_range (flask.Request property)if_unmodified_since (flask.Request property)implicit_sequence_conversion (flask.Response attribute)import_name (flask.Blueprint attribute)(flask.Flask attribute)init_every_request (flask.views.View attribute)inject_url_defaults() (flask.Flask method)input_stream (flask.Request attribute)instance_path (flask.Flask attribute)invoke() (flask.testing.FlaskCliRunner method)is_json (flask.Request property)(flask.Response property)is_multiprocess (flask.Request attribute)is_multithread (flask.Request attribute)is_null_session() (flask.sessions.SessionInterface method)is_run_once (flask.Request attribute)is_secure (flask.Request property)is_sequence (flask.Response property)is_streamed (flask.Response property)iter_blueprints() (flask.Flask method)iter_encoded() (flask.Response method)Jjinja_env (flask.Flask property)jinja_environment (flask.Flask attribute)jinja_loader (flask.Blueprint property)(flask.Flask property)jinja_options (flask.Flask attribute)json (flask.Flask attribute)(flask.Request property)(flask.Response property)json_provider_class (flask.Flask attribute)jsonify() (in module flask.json)JSONProvider (class in flask.json.provider)JSONTag (class in flask.json.tag)Kkey (flask.json.tag.JSONTag attribute)key_derivation (flask.sessions.SecureCookieSessionInterface attribute)Llast_modified (flask.Response attribute)list_commands() (flask.cli.FlaskGroup method)list_storage_class (flask.Request attribute)load() (flask.json.provider.JSONProvider method)(in module flask.json)load_app() (flask.cli.ScriptInfo method)load_dotenv() (in module flask.cli)load_dotenv_defaults (flask.cli.ScriptInfo attribute)loads() (flask.json.provider.DefaultJSONProvider method)(flask.json.provider.JSONProvider method)(flask.json.tag.TaggedJSONSerializer method)(in module flask.json)location (flask.Response attribute)log_exception() (flask.Flask method)logger (flask.Flask property)Mmake_aborter() (flask.Flask method)make_conditional() (flask.Response method)make_config() (flask.Flask method)make_context() (flask.cli.FlaskGroup method)make_default_options_response() (flask.Flask method)make_form_data_parser() (flask.Request method)make_null_session() (flask.sessions.SessionInterface method)make_response() (flask.Flask method)(in module flask)make_sequence() (flask.Response method)make_setup_state() (flask.Blueprint method)make_shell_context() (flask.Flask method)match_request() (flask.ctx.RequestContext method)MAX_CONTENT_LENGTH (built-in variable)max_content_length (flask.Request property)MAX_COOKIE_SIZE (built-in variable)max_cookie_size (flask.Response property)MAX_FORM_MEMORY_SIZE (built-in variable)max_form_memory_size (flask.Request property)MAX_FORM_PARTS (built-in variable)max_form_parts (flask.Request property)max_forwards (flask.Request attribute)message_flashed (in module flask)method (flask.Request attribute)methods (flask.views.View attribute)MethodView (class in flask.views)mimetype (flask.json.provider.DefaultJSONProvider attribute)(flask.Request property)(flask.Response property)mimetype_params (flask.Request property)(flask.Response property)modified (flask.session attribute)(flask.sessions.SecureCookieSession attribute)(flask.sessions.SessionMixin attribute)moduleflaskflask.jsonflask.json.tagNname (flask.Flask property)new (flask.session attribute)null_session_class (flask.sessions.SessionInterface attribute)NullSession (class in flask.sessions)Oon_json_loading_failed() (flask.Request method)open() (flask.testing.FlaskClient method)open_instance_resource() (flask.Flask method)open_resource() (flask.Blueprint method)(flask.Flask method)open_session() (flask.sessions.SecureCookieSessionInterface method)(flask.sessions.SessionInterface method)options (flask.blueprints.BlueprintSetupState attribute)origin (flask.Request attribute)Pparameter_storage_class (flask.Request attribute)parse_args() (flask.cli.FlaskGroup method)pass_script_info() (in module flask.cli)patch() (flask.Blueprint method)(flask.Flask method)path (flask.Request attribute)permanent (flask.session attribute)(flask.sessions.SessionMixin property)PERMANENT_SESSION_LIFETIME (built-in variable)permanent_session_lifetime (flask.Flask attribute)pickle_based (flask.sessions.SessionInterface attribute)pop() (flask.ctx._AppCtxGlobals method)(flask.ctx.AppContext method)(flask.ctx.RequestContext method)(flask.sessions.NullSession method)popitem() (flask.sessions.NullSession method)post() (flask.Blueprint method)(flask.Flask method)pragma (flask.Request property)PREFERRED_URL_SCHEME (built-in variable)preprocess_request() (flask.Flask method)process_response() (flask.Flask method)PROPAGATE_EXCEPTIONS (built-in variable)PROVIDE_AUTOMATIC_OPTIONS (built-in variable)provide_automatic_options (flask.views.View attribute)push() (flask.ctx.AppContext method)put() (flask.Blueprint method)(flask.Flask method)Python Enhancement ProposalsPEP 302PEP 3333,[1]PEP 451PEP 519Qquery_string (flask.Request attribute)Rrange (flask.Request property)record() (flask.Blueprint method)record_once() (flask.Blueprint method)redirect() (flask.Flask method)(in module flask)referrer (flask.Request attribute)register() (flask.Blueprint method)(flask.json.tag.TaggedJSONSerializer method)register_blueprint() (flask.Blueprint method)(flask.Flask method)register_error_handler() (flask.Blueprint method)(flask.Flask method)remote_addr (flask.Request attribute)remote_user (flask.Request attribute)render_template() (in module flask)render_template_string() (in module flask)Request (class in flask)request (in module flask)request_class (flask.Flask attribute)request_context() (flask.Flask method)request_finished (in module flask)request_started (in module flask)request_tearing_down (in module flask)RequestContext (class in flask.ctx)Response (class in flask)response (flask.Response attribute)response() (flask.json.provider.DefaultJSONProvider method)(flask.json.provider.JSONProvider method)response_class (flask.Flask attribute)retry_after (flask.Response property)RFCRFC 2231RFC 822RFC 8259,[1]root_path (flask.Blueprint attribute)(flask.Flask attribute)(flask.Request attribute)root_url (flask.Request property)route() (flask.Blueprint method)(flask.Flask method)routing_exception (flask.Request attribute)run() (flask.Flask method)run_command (in module flask.cli)Ssalt (flask.sessions.SecureCookieSessionInterface attribute)save_session() (flask.sessions.SecureCookieSessionInterface method)(flask.sessions.SessionInterface method)scheme (flask.Request attribute)script_root (flask.Request property)ScriptInfo (class in flask.cli)SECRET_KEY (built-in variable)secret_key (flask.Flask attribute)SECRET_KEY_FALLBACKS (built-in variable)SecureCookieSession (class in flask.sessions)SecureCookieSessionInterface (class in flask.sessions)select_jinja_autoescape() (flask.Flask method)send_file() (in module flask)SEND_FILE_MAX_AGE_DEFAULT (built-in variable)send_from_directory() (in module flask)send_static_file() (flask.Blueprint method)(flask.Flask method)serializer (flask.sessions.SecureCookieSessionInterface attribute)server (flask.Request attribute)SERVER_NAME (built-in variable)session (class in flask)session_class (flask.sessions.SecureCookieSessionInterface attribute)SESSION_COOKIE_DOMAIN (built-in variable)SESSION_COOKIE_HTTPONLY (built-in variable)SESSION_COOKIE_NAME (built-in variable)SESSION_COOKIE_PARTITIONED (built-in variable)SESSION_COOKIE_PATH (built-in variable)SESSION_COOKIE_SAMESITE (built-in variable)SESSION_COOKIE_SECURE (built-in variable)session_interface (flask.Flask attribute)SESSION_REFRESH_EACH_REQUEST (built-in variable)session_transaction() (flask.testing.FlaskClient method)SessionInterface (class in flask.sessions)SessionMixin (class in flask.sessions)set_cookie() (flask.Response method)set_data() (flask.Response method)set_etag() (flask.Response method)setdefault() (flask.ctx._AppCtxGlobals method)(flask.sessions.NullSession method)(flask.sessions.SecureCookieSession method)shallow (flask.Request attribute)shell_command (in module flask.cli)shell_context_processor() (flask.Flask method)shell_context_processors (flask.Flask attribute)should_ignore_error() (flask.Flask method)should_set_cookie() (flask.sessions.SessionInterface method)sort_keys (flask.json.provider.DefaultJSONProvider attribute)static_folder (flask.Blueprint property)(flask.Flask property)static_url_path (flask.Blueprint property)(flask.Flask property)status (flask.Response property)status_code (flask.Response property)stream (flask.Request property)(flask.Response property)stream_template() (in module flask)stream_template_string() (in module flask)stream_with_context() (in module flask)subdomain (flask.blueprints.BlueprintSetupState attribute)Ttag() (flask.json.tag.JSONTag method)(flask.json.tag.TaggedJSONSerializer method)TaggedJSONSerializer (class in flask.json.tag)teardown_app_request() (flask.Blueprint method)teardown_appcontext() (flask.Flask method)teardown_appcontext_funcs (flask.Flask attribute)teardown_request() (flask.Blueprint method)(flask.Flask method)teardown_request_funcs (flask.Blueprint attribute)(flask.Flask attribute)template_context_processors (flask.Blueprint attribute)(flask.Flask attribute)template_filter() (flask.Flask method)template_folder (flask.Blueprint attribute)(flask.Flask attribute)template_global() (flask.Flask method)template_rendered (in module flask)template_test() (flask.Flask method)TEMPLATES_AUTO_RELOAD (built-in variable)test_cli_runner() (flask.Flask method)test_cli_runner_class (flask.Flask attribute)test_client() (flask.Flask method)test_client_class (flask.Flask attribute)test_request_context() (flask.Flask method)TESTING (built-in variable)testing (flask.Flask attribute)to_json() (flask.json.tag.JSONTag method)to_python() (flask.json.tag.JSONTag method)TRAP_BAD_REQUEST_ERRORS (built-in variable)trap_http_exception() (flask.Flask method)TRAP_HTTP_EXCEPTIONS (built-in variable)TRUSTED_HOSTS (built-in variable)trusted_hosts (flask.Request attribute)Uuntag() (flask.json.tag.TaggedJSONSerializer method)update() (flask.sessions.NullSession method)update_template_context() (flask.Flask method)url (flask.Request property)url_build_error_handlers (flask.Flask attribute)url_default_functions (flask.Blueprint attribute)(flask.Flask attribute)url_defaults (flask.blueprints.BlueprintSetupState attribute)url_defaults() (flask.Blueprint method)(flask.Flask method)url_for() (flask.Flask method)(in module flask)url_map (flask.Flask attribute)url_map_class (flask.Flask attribute)url_prefix (flask.blueprints.BlueprintSetupState attribute)url_root (flask.Request property)url_rule (flask.Request attribute)url_rule_class (flask.Flask attribute)url_value_preprocessor() (flask.Blueprint method)(flask.Flask method)url_value_preprocessors (flask.Blueprint attribute)(flask.Flask attribute)USE_X_SENDFILE (built-in variable)user_agent (flask.Request property)user_agent_class (flask.Request attribute)Vvalues (flask.Request property)vary (flask.Response property)View (class in flask.views)view_args (flask.Request attribute)view_functions (flask.Blueprint attribute)(flask.Flask attribute)Wwant_form_data_parsed (flask.Request property)with_appcontext() (in module flask.cli)wsgi_app() (flask.Flask method)www_authenticate (flask.Response property)YYOURAPPLICATION_SETTINGS\n\n_|A|B|C|D|E|F|G|H|I|J|K|L|M|N|O|P|Q|R|S|T|U|V|W|Y\n\nNavigationOverviewQuick search\n\nNavigationOverviewQuick search"
  },
  "https://flask.palletsprojects.com/en/2.3.x/py-modindex/": {
    "url": "https://flask.palletsprojects.com/en/2.3.x/py-modindex/",
    "title": "Python Module Index \u2014 Flask Documentation (3.1.x)",
    "headings": [
      {
        "level": 3,
        "text": "Navigation",
        "id": ""
      },
      {
        "level": 1,
        "text": "Python Module Index",
        "id": ""
      },
      {
        "level": 3,
        "text": "Navigation",
        "id": ""
      },
      {
        "level": 3,
        "text": "Quick search",
        "id": "searchlabel"
      }
    ],
    "code_blocks": [],
    "toc": [],
    "content": "Python Module Indexffflaskflask.jsonflask.json.tag\n\nPython Module Indexffflaskflask.jsonflask.json.tag\n\nPython Module Indexffflaskflask.jsonflask.json.tag\n\nf\n\nNavigationOverviewQuick search\n\nNavigationOverviewQuick search"
  },
  "https://flask.palletsprojects.com/en/2.3.x/installation/": {
    "url": "https://flask.palletsprojects.com/en/2.3.x/installation/",
    "title": "Installation \u2014 Flask Documentation (3.1.x)",
    "headings": [
      {
        "level": 3,
        "text": "Navigation",
        "id": ""
      },
      {
        "level": 1,
        "text": "Installation\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "Python Version\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "Dependencies\u00b6",
        "id": ""
      },
      {
        "level": 3,
        "text": "Optional dependencies\u00b6",
        "id": ""
      },
      {
        "level": 3,
        "text": "greenlet\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "Virtual environments\u00b6",
        "id": ""
      },
      {
        "level": 3,
        "text": "Create an environment\u00b6",
        "id": ""
      },
      {
        "level": 3,
        "text": "Activate the environment\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "Install Flask\u00b6",
        "id": ""
      },
      {
        "level": 3,
        "text": "Contents",
        "id": ""
      },
      {
        "level": 3,
        "text": "Navigation",
        "id": ""
      },
      {
        "level": 3,
        "text": "Quick search",
        "id": "searchlabel"
      }
    ],
    "code_blocks": [
      {
        "language": "unknown",
        "content": "$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv"
      },
      {
        "language": "unknown",
        "content": "> mkdir myproject\n> cd myproject\n> py -3 -m venv .venv"
      },
      {
        "language": "unknown",
        "content": "$ . .venv/bin/activate"
      },
      {
        "language": "unknown",
        "content": "> .venv\\Scripts\\activate"
      },
      {
        "language": "unknown",
        "content": "$pipinstallFlask"
      },
      {
        "language": "unknown",
        "content": "$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv"
      },
      {
        "language": "unknown",
        "content": "> mkdir myproject\n> cd myproject\n> py -3 -m venv .venv"
      },
      {
        "language": "unknown",
        "content": "$ . .venv/bin/activate"
      },
      {
        "language": "unknown",
        "content": "> .venv\\Scripts\\activate"
      },
      {
        "language": "unknown",
        "content": "$pipinstallFlask"
      }
    ],
    "toc": [],
    "content": "Installation\u00b6Python Version\u00b6We recommend using the latest version of Python. Flask supports Python 3.9 and newer.Dependencies\u00b6These distributions will be installed automatically when installing Flask.Werkzeugimplements WSGI, the standard Python interface between\napplications and servers.Jinjais a template language that renders the pages your application\nserves.MarkupSafecomes with Jinja. It escapes untrusted input when rendering\ntemplates to avoid injection attacks.ItsDangeroussecurely signs data to ensure its integrity. This is used\nto protect Flask\u2019s session cookie.Clickis a framework for writing command line applications. It provides\ntheflaskcommand and allows adding custom management commands.Blinkerprovides support forSignals.Optional dependencies\u00b6These distributions will not be installed automatically. Flask will detect and\nuse them if you install them.python-dotenvenables support forEnvironment Variables From dotenvwhen runningflaskcommands.Watchdogprovides a faster, more efficient reloader for the development\nserver.greenlet\u00b6You may choose to use gevent or eventlet with your application. In this\ncase, greenlet>=1.0 is required. When using PyPy, PyPy>=7.3.7 is\nrequired.These are not minimum supported versions, they only indicate the first\nversions that added necessary features. You should use the latest\nversions of each.Virtual environments\u00b6Use a virtual environment to manage the dependencies for your project, both in\ndevelopment and in production.What problem does a virtual environment solve? The more Python projects you\nhave, the more likely it is that you need to work with different versions of\nPython libraries, or even Python itself. Newer versions of libraries for one\nproject can break compatibility in another project.Virtual environments are independent groups of Python libraries, one for each\nproject. Packages installed for one project will not affect other projects or\nthe operating system\u2019s packages.Python comes bundled with thevenvmodule to create virtual\nenvironments.Create an environment\u00b6Create a project folder and a.venvfolder within:macOS/LinuxWindows$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv> mkdir myproject\n> cd myproject\n> py -3 -m venv .venvActivate the environment\u00b6Before you work on your project, activate the corresponding environment:macOS/LinuxWindows$ . .venv/bin/activate> .venv\\Scripts\\activateYour shell prompt will change to show the name of the activated\nenvironment.Install Flask\u00b6Within the activated environment, use the following command to install\nFlask:$pipinstallFlaskFlask is now installed. Check out theQuickstartor go to theDocumentation Overview.\n\nInstallation\u00b6Python Version\u00b6We recommend using the latest version of Python. Flask supports Python 3.9 and newer.Dependencies\u00b6These distributions will be installed automatically when installing Flask.Werkzeugimplements WSGI, the standard Python interface between\napplications and servers.Jinjais a template language that renders the pages your application\nserves.MarkupSafecomes with Jinja. It escapes untrusted input when rendering\ntemplates to avoid injection attacks.ItsDangeroussecurely signs data to ensure its integrity. This is used\nto protect Flask\u2019s session cookie.Clickis a framework for writing command line applications. It provides\ntheflaskcommand and allows adding custom management commands.Blinkerprovides support forSignals.Optional dependencies\u00b6These distributions will not be installed automatically. Flask will detect and\nuse them if you install them.python-dotenvenables support forEnvironment Variables From dotenvwhen runningflaskcommands.Watchdogprovides a faster, more efficient reloader for the development\nserver.greenlet\u00b6You may choose to use gevent or eventlet with your application. In this\ncase, greenlet>=1.0 is required. When using PyPy, PyPy>=7.3.7 is\nrequired.These are not minimum supported versions, they only indicate the first\nversions that added necessary features. You should use the latest\nversions of each.Virtual environments\u00b6Use a virtual environment to manage the dependencies for your project, both in\ndevelopment and in production.What problem does a virtual environment solve? The more Python projects you\nhave, the more likely it is that you need to work with different versions of\nPython libraries, or even Python itself. Newer versions of libraries for one\nproject can break compatibility in another project.Virtual environments are independent groups of Python libraries, one for each\nproject. Packages installed for one project will not affect other projects or\nthe operating system\u2019s packages.Python comes bundled with thevenvmodule to create virtual\nenvironments.Create an environment\u00b6Create a project folder and a.venvfolder within:macOS/LinuxWindows$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv> mkdir myproject\n> cd myproject\n> py -3 -m venv .venvActivate the environment\u00b6Before you work on your project, activate the corresponding environment:macOS/LinuxWindows$ . .venv/bin/activate> .venv\\Scripts\\activateYour shell prompt will change to show the name of the activated\nenvironment.Install Flask\u00b6Within the activated environment, use the following command to install\nFlask:$pipinstallFlaskFlask is now installed. Check out theQuickstartor go to theDocumentation Overview.\n\nInstallation\u00b6Python Version\u00b6We recommend using the latest version of Python. Flask supports Python 3.9 and newer.Dependencies\u00b6These distributions will be installed automatically when installing Flask.Werkzeugimplements WSGI, the standard Python interface between\napplications and servers.Jinjais a template language that renders the pages your application\nserves.MarkupSafecomes with Jinja. It escapes untrusted input when rendering\ntemplates to avoid injection attacks.ItsDangeroussecurely signs data to ensure its integrity. This is used\nto protect Flask\u2019s session cookie.Clickis a framework for writing command line applications. It provides\ntheflaskcommand and allows adding custom management commands.Blinkerprovides support forSignals.Optional dependencies\u00b6These distributions will not be installed automatically. Flask will detect and\nuse them if you install them.python-dotenvenables support forEnvironment Variables From dotenvwhen runningflaskcommands.Watchdogprovides a faster, more efficient reloader for the development\nserver.greenlet\u00b6You may choose to use gevent or eventlet with your application. In this\ncase, greenlet>=1.0 is required. When using PyPy, PyPy>=7.3.7 is\nrequired.These are not minimum supported versions, they only indicate the first\nversions that added necessary features. You should use the latest\nversions of each.Virtual environments\u00b6Use a virtual environment to manage the dependencies for your project, both in\ndevelopment and in production.What problem does a virtual environment solve? The more Python projects you\nhave, the more likely it is that you need to work with different versions of\nPython libraries, or even Python itself. Newer versions of libraries for one\nproject can break compatibility in another project.Virtual environments are independent groups of Python libraries, one for each\nproject. Packages installed for one project will not affect other projects or\nthe operating system\u2019s packages.Python comes bundled with thevenvmodule to create virtual\nenvironments.Create an environment\u00b6Create a project folder and a.venvfolder within:macOS/LinuxWindows$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv> mkdir myproject\n> cd myproject\n> py -3 -m venv .venvActivate the environment\u00b6Before you work on your project, activate the corresponding environment:macOS/LinuxWindows$ . .venv/bin/activate> .venv\\Scripts\\activateYour shell prompt will change to show the name of the activated\nenvironment.Install Flask\u00b6Within the activated environment, use the following command to install\nFlask:$pipinstallFlaskFlask is now installed. Check out theQuickstartor go to theDocumentation Overview.\n\nInstallation\u00b6Python Version\u00b6We recommend using the latest version of Python. Flask supports Python 3.9 and newer.Dependencies\u00b6These distributions will be installed automatically when installing Flask.Werkzeugimplements WSGI, the standard Python interface between\napplications and servers.Jinjais a template language that renders the pages your application\nserves.MarkupSafecomes with Jinja. It escapes untrusted input when rendering\ntemplates to avoid injection attacks.ItsDangeroussecurely signs data to ensure its integrity. This is used\nto protect Flask\u2019s session cookie.Clickis a framework for writing command line applications. It provides\ntheflaskcommand and allows adding custom management commands.Blinkerprovides support forSignals.Optional dependencies\u00b6These distributions will not be installed automatically. Flask will detect and\nuse them if you install them.python-dotenvenables support forEnvironment Variables From dotenvwhen runningflaskcommands.Watchdogprovides a faster, more efficient reloader for the development\nserver.greenlet\u00b6You may choose to use gevent or eventlet with your application. In this\ncase, greenlet>=1.0 is required. When using PyPy, PyPy>=7.3.7 is\nrequired.These are not minimum supported versions, they only indicate the first\nversions that added necessary features. You should use the latest\nversions of each.Virtual environments\u00b6Use a virtual environment to manage the dependencies for your project, both in\ndevelopment and in production.What problem does a virtual environment solve? The more Python projects you\nhave, the more likely it is that you need to work with different versions of\nPython libraries, or even Python itself. Newer versions of libraries for one\nproject can break compatibility in another project.Virtual environments are independent groups of Python libraries, one for each\nproject. Packages installed for one project will not affect other projects or\nthe operating system\u2019s packages.Python comes bundled with thevenvmodule to create virtual\nenvironments.Create an environment\u00b6Create a project folder and a.venvfolder within:macOS/LinuxWindows$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv> mkdir myproject\n> cd myproject\n> py -3 -m venv .venvActivate the environment\u00b6Before you work on your project, activate the corresponding environment:macOS/LinuxWindows$ . .venv/bin/activate> .venv\\Scripts\\activateYour shell prompt will change to show the name of the activated\nenvironment.Install Flask\u00b6Within the activated environment, use the following command to install\nFlask:$pipinstallFlaskFlask is now installed. Check out theQuickstartor go to theDocumentation Overview.\n\nPython Version\u00b6We recommend using the latest version of Python. Flask supports Python 3.9 and newer.\n\nWe recommend using the latest version of Python. Flask supports Python 3.9 and newer.\n\nDependencies\u00b6These distributions will be installed automatically when installing Flask.Werkzeugimplements WSGI, the standard Python interface between\napplications and servers.Jinjais a template language that renders the pages your application\nserves.MarkupSafecomes with Jinja. It escapes untrusted input when rendering\ntemplates to avoid injection attacks.ItsDangeroussecurely signs data to ensure its integrity. This is used\nto protect Flask\u2019s session cookie.Clickis a framework for writing command line applications. It provides\ntheflaskcommand and allows adding custom management commands.Blinkerprovides support forSignals.Optional dependencies\u00b6These distributions will not be installed automatically. Flask will detect and\nuse them if you install them.python-dotenvenables support forEnvironment Variables From dotenvwhen runningflaskcommands.Watchdogprovides a faster, more efficient reloader for the development\nserver.greenlet\u00b6You may choose to use gevent or eventlet with your application. In this\ncase, greenlet>=1.0 is required. When using PyPy, PyPy>=7.3.7 is\nrequired.These are not minimum supported versions, they only indicate the first\nversions that added necessary features. You should use the latest\nversions of each.\n\nThese distributions will be installed automatically when installing Flask.\n\nWerkzeugimplements WSGI, the standard Python interface between\napplications and servers.\n\nJinjais a template language that renders the pages your application\nserves.\n\nMarkupSafecomes with Jinja. It escapes untrusted input when rendering\ntemplates to avoid injection attacks.\n\nItsDangeroussecurely signs data to ensure its integrity. This is used\nto protect Flask\u2019s session cookie.\n\nClickis a framework for writing command line applications. It provides\ntheflaskcommand and allows adding custom management commands.\n\nBlinkerprovides support forSignals.\n\nOptional dependencies\u00b6These distributions will not be installed automatically. Flask will detect and\nuse them if you install them.python-dotenvenables support forEnvironment Variables From dotenvwhen runningflaskcommands.Watchdogprovides a faster, more efficient reloader for the development\nserver.\n\nThese distributions will not be installed automatically. Flask will detect and\nuse them if you install them.\n\npython-dotenvenables support forEnvironment Variables From dotenvwhen runningflaskcommands.\n\nWatchdogprovides a faster, more efficient reloader for the development\nserver.\n\ngreenlet\u00b6You may choose to use gevent or eventlet with your application. In this\ncase, greenlet>=1.0 is required. When using PyPy, PyPy>=7.3.7 is\nrequired.These are not minimum supported versions, they only indicate the first\nversions that added necessary features. You should use the latest\nversions of each.\n\nYou may choose to use gevent or eventlet with your application. In this\ncase, greenlet>=1.0 is required. When using PyPy, PyPy>=7.3.7 is\nrequired.\n\nThese are not minimum supported versions, they only indicate the first\nversions that added necessary features. You should use the latest\nversions of each.\n\nVirtual environments\u00b6Use a virtual environment to manage the dependencies for your project, both in\ndevelopment and in production.What problem does a virtual environment solve? The more Python projects you\nhave, the more likely it is that you need to work with different versions of\nPython libraries, or even Python itself. Newer versions of libraries for one\nproject can break compatibility in another project.Virtual environments are independent groups of Python libraries, one for each\nproject. Packages installed for one project will not affect other projects or\nthe operating system\u2019s packages.Python comes bundled with thevenvmodule to create virtual\nenvironments.Create an environment\u00b6Create a project folder and a.venvfolder within:macOS/LinuxWindows$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv> mkdir myproject\n> cd myproject\n> py -3 -m venv .venvActivate the environment\u00b6Before you work on your project, activate the corresponding environment:macOS/LinuxWindows$ . .venv/bin/activate> .venv\\Scripts\\activateYour shell prompt will change to show the name of the activated\nenvironment.\n\nUse a virtual environment to manage the dependencies for your project, both in\ndevelopment and in production.\n\nWhat problem does a virtual environment solve? The more Python projects you\nhave, the more likely it is that you need to work with different versions of\nPython libraries, or even Python itself. Newer versions of libraries for one\nproject can break compatibility in another project.\n\nVirtual environments are independent groups of Python libraries, one for each\nproject. Packages installed for one project will not affect other projects or\nthe operating system\u2019s packages.\n\nPython comes bundled with thevenvmodule to create virtual\nenvironments.\n\nCreate an environment\u00b6Create a project folder and a.venvfolder within:macOS/LinuxWindows$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv> mkdir myproject\n> cd myproject\n> py -3 -m venv .venv\n\nCreate a project folder and a.venvfolder within:\n\nmacOS/LinuxWindows$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv> mkdir myproject\n> cd myproject\n> py -3 -m venv .venv\n\nmacOS/LinuxWindows\n\n$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv\n\n$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv\n\n$ mkdir myproject\n$ cd myproject\n$ python3 -m venv .venv\n\n> mkdir myproject\n> cd myproject\n> py -3 -m venv .venv\n\n> mkdir myproject\n> cd myproject\n> py -3 -m venv .venv\n\n> mkdir myproject\n> cd myproject\n> py -3 -m venv .venv\n\nActivate the environment\u00b6Before you work on your project, activate the corresponding environment:macOS/LinuxWindows$ . .venv/bin/activate> .venv\\Scripts\\activateYour shell prompt will change to show the name of the activated\nenvironment.\n\nBefore you work on your project, activate the corresponding environment:\n\nmacOS/LinuxWindows$ . .venv/bin/activate> .venv\\Scripts\\activate\n\nmacOS/LinuxWindows\n\n$ . .venv/bin/activate\n\n$ . .venv/bin/activate\n\n$ . .venv/bin/activate\n\n> .venv\\Scripts\\activate\n\n> .venv\\Scripts\\activate\n\n> .venv\\Scripts\\activate\n\nYour shell prompt will change to show the name of the activated\nenvironment.\n\nInstall Flask\u00b6Within the activated environment, use the following command to install\nFlask:$pipinstallFlaskFlask is now installed. Check out theQuickstartor go to theDocumentation Overview.\n\nWithin the activated environment, use the following command to install\nFlask:\n\n$pipinstallFlask\n\n$pipinstallFlask\n\nFlask is now installed. Check out theQuickstartor go to theDocumentation Overview.\n\nContentsInstallationPython VersionDependenciesOptional dependenciesgreenletVirtual environmentsCreate an environmentActivate the environmentInstall FlaskNavigationOverviewPrevious:Welcome to FlaskNext:QuickstartQuick search\n\nContentsInstallationPython VersionDependenciesOptional dependenciesgreenletVirtual environmentsCreate an environmentActivate the environmentInstall FlaskNavigationOverviewPrevious:Welcome to FlaskNext:QuickstartQuick search"
  },
  "https://flask.palletsprojects.com/en/2.3.x/#welcome-to-flask": {
    "url": "https://flask.palletsprojects.com/en/2.3.x/#welcome-to-flask",
    "title": "Welcome to Flask \u2014 Flask Documentation (3.1.x)",
    "headings": [
      {
        "level": 3,
        "text": "Navigation",
        "id": ""
      },
      {
        "level": 1,
        "text": "Welcome to Flask\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "User\u2019s Guide\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "API Reference\u00b6",
        "id": ""
      },
      {
        "level": 2,
        "text": "Additional Notes\u00b6",
        "id": ""
      },
      {
        "level": 3,
        "text": "Project Links",
        "id": ""
      },
      {
        "level": 3,
        "text": "Contents",
        "id": ""
      },
      {
        "level": 3,
        "text": "Quick search",
        "id": "searchlabel"
      }
    ],
    "code_blocks": [],
    "toc": [],
    "content": "Welcome to Flask\u00b6Welcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.Get started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.Flask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.User\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loopsAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line InterfaceAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nWelcome to Flask\u00b6Welcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.Get started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.Flask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.User\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loopsAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line InterfaceAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nWelcome to Flask\u00b6Welcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.Get started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.Flask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.User\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loopsAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line InterfaceAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nWelcome to Flask\u00b6Welcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.Get started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.Flask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.User\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loopsAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line InterfaceAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nWelcome to Flask\u2019s documentation. Flask is a lightweight WSGI web application framework.\nIt is designed to make getting started quick and easy, with the ability to scale up to\ncomplex applications.\n\nGet started withInstallationand then get an overview with theQuickstart. There is also a\nmore detailedTutorialthat shows how to create a small but\ncomplete application with Flask. Common patterns are described in thePatterns for Flasksection. The rest of the docs describe each\ncomponent of Flask in detail, with a full reference in theAPIsection.\n\nFlask depends on theWerkzeugWSGI toolkit, theJinjatemplate engine, and theClickCLI toolkit. Be sure to check their documentation as well as Flask\u2019s when\nlooking for information.\n\nUser\u2019s Guide\u00b6Flask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.InstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loops\n\nFlask provides configuration and conventions, with sensible defaults, to get started.\nThis section of the documentation explains the different parts of the Flask framework\nand how they can be used, customized, and extended. Beyond Flask itself, look for\ncommunity-maintained extensions to add even more functionality.\n\nInstallationPython VersionDependenciesVirtual environmentsInstall FlaskQuickstartA Minimal ApplicationDebug ModeHTML EscapingRoutingStatic FilesRendering TemplatesAccessing Request DataRedirects and ErrorsAbout ResponsesSessionsMessage FlashingLoggingHooking in WSGI MiddlewareUsing Flask ExtensionsDeploying to a Web ServerTutorialProject LayoutApplication SetupDefine and Access the DatabaseBlueprints and ViewsTemplatesStatic FilesBlog BlueprintMake the Project InstallableTest CoverageDeploy to ProductionKeep Developing!TemplatesJinja SetupStandard ContextControlling AutoescapingRegistering FiltersContext ProcessorsStreamingTesting Flask ApplicationsIdentifying TestsFixturesSending Requests with the Test ClientFollowing RedirectsAccessing and Modifying the SessionRunning Commands with the CLI RunnerTests that depend on an Active ContextHandling Application ErrorsError Logging ToolsError HandlersCustom Error PagesBlueprint Error HandlersReturning API Errors as JSONLoggingDebuggingDebugging Application ErrorsIn ProductionThe Built-In DebuggerExternal DebuggersLoggingBasic ConfigurationEmail Errors to AdminsInjecting Request InformationOther LibrariesConfiguration HandlingConfiguration BasicsDebug ModeBuiltin Configuration ValuesConfiguring from Python FilesConfiguring from Data FilesConfiguring from Environment VariablesConfiguration Best PracticesDevelopment / ProductionInstance FoldersSignalsCore SignalsSubscribing to SignalsCreating SignalsSending SignalsSignals and Flask\u2019s Request ContextDecorator Based Signal SubscriptionsClass-based ViewsBasic Reusable ViewURL VariablesView Lifetime andselfView DecoratorsMethod HintsMethod Dispatching and APIsApplication Structure and LifecycleApplication SetupServing the ApplicationHow a Request is HandledThe Application ContextPurpose of the ContextLifetime of the ContextManually Push a ContextStoring DataEvents and SignalsThe Request ContextPurpose of the ContextLifetime of the ContextManually Push a ContextHow the Context WorksCallbacks and ErrorsNotes On ProxiesModular Applications with BlueprintsWhy Blueprints?The Concept of BlueprintsMy First BlueprintRegistering BlueprintsNesting BlueprintsBlueprint ResourcesBuilding URLsBlueprint Error HandlersExtensionsFinding ExtensionsUsing ExtensionsBuilding ExtensionsCommand Line InterfaceApplication DiscoveryRun the Development ServerOpen a ShellEnvironment Variables From dotenvEnvironment Variables From virtualenvCustom CommandsPluginsCustom ScriptsPyCharm IntegrationDevelopment ServerCommand LineIn CodeWorking with the ShellCommand Line InterfaceCreating a Request ContextFiring Before/After RequestFurther Improving the Shell ExperiencePatterns for FlaskLarge Applications as PackagesApplication FactoriesApplication DispatchingUsing URL ProcessorsUsing SQLite 3 with FlaskSQLAlchemy in FlaskUploading FilesCachingView DecoratorsForm Validation with WTFormsTemplate InheritanceMessage FlashingJavaScript,fetch, and JSONLazily Loading ViewsMongoDB with MongoEngineAdding a faviconStreaming ContentsDeferred Request CallbacksAdding HTTP Method OverridesRequest Content ChecksumsBackground Tasks with CelerySubclassing FlaskSingle-Page ApplicationsSecurity ConsiderationsResource UseCross-Site Scripting (XSS)Cross-Site Request Forgery (CSRF)JSON SecuritySecurity HeadersCopy/Paste to TerminalDeploying to ProductionSelf-Hosted OptionsHosting PlatformsUsingasyncandawaitPerformanceBackground tasksWhen to use Quart insteadExtensionsOther event loops\n\nAPI Reference\u00b6If you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.APIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line Interface\n\nIf you are looking for information on a specific function, class or\nmethod, this part of the documentation is for you.\n\nAPIApplication ObjectBlueprint ObjectsIncoming Request DataResponse ObjectsSessionsSession InterfaceTest ClientTest CLI RunnerApplication GlobalsUseful Functions and ClassesMessage FlashingJSON SupportTemplate RenderingConfigurationStream HelpersUseful InternalsSignalsClass-Based ViewsURL Route RegistrationsView Function OptionsCommand Line Interface\n\nAdditional Notes\u00b6Design Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nDesign Decisions in FlaskThe Explicit Application ObjectThe Routing SystemOne Template EngineWhat does \u201cmicro\u201d mean?Thread LocalsAsync/await and ASGI supportWhat Flask is, What Flask is NotFlask Extension DevelopmentNamingThe Extension Class and InitializationAdding BehaviorConfiguration TechniquesData During a RequestViews and ModelsRecommended Extension GuidelinesContributingBSD-3-Clause LicenseChangesVersion 3.1.1Version 3.1.0Version 3.0.3Version 3.0.2Version 3.0.1Version 3.0.0Version 2.3.3Version 2.3.2Version 2.3.1Version 2.3.0Version 2.2.5Version 2.2.4Version 2.2.3Version 2.2.2Version 2.2.1Version 2.2.0Version 2.1.3Version 2.1.2Version 2.1.1Version 2.1.0Version 2.0.3Version 2.0.2Version 2.0.1Version 2.0.0Version 1.1.4Version 1.1.3Version 1.1.2Version 1.1.1Version 1.1.0Version 1.0.4Version 1.0.3Version 1.0.2Version 1.0.1Version 1.0Version 0.12.5Version 0.12.4Version 0.12.3Version 0.12.2Version 0.12.1Version 0.12Version 0.11.1Version 0.11Version 0.10.1Version 0.10Version 0.9Version 0.8.1Version 0.8Version 0.7.2Version 0.7.1Version 0.7Version 0.6.1Version 0.6Version 0.5.2Version 0.5.1Version 0.5Version 0.4Version 0.3.1Version 0.3Version 0.2Version 0.1\n\nProject LinksDonatePyPI ReleasesSource CodeIssue TrackerChatContentsWelcome to FlaskUser\u2019s GuideAPI ReferenceAdditional NotesQuick search\n\nProject LinksDonatePyPI ReleasesSource CodeIssue TrackerChatContentsWelcome to FlaskUser\u2019s GuideAPI ReferenceAdditional NotesQuick search"
  }
}