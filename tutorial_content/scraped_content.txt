SCRAPED CONTENT FROM 2 PAGES
================================================================================

================================================================================
URL: https://docs.python.org/3/tutorial/appetite.html
TITLE: 1. Whetting Your Appetite — Python 3.13.2 documentation
================================================================================

1. Whetting Your Appetite — Python 3.13.2 documentation
Navigation
index
modules
|
next
|
previous
|
Python
»
3.13.2 Documentation
»
The Python Tutorial
»
1.
Whetting Your Appetite
|
Theme
Auto
Light
Dark
|
1.
Whetting Your Appetite
Â¶
If you do much work on computers, eventually you find that thereâs some task
youâd like to automate.  For example, you may wish to perform a
search-and-replace over a large number of text files, or rename and rearrange a
bunch of photo files in a complicated way. Perhaps youâd like to write a small
custom database, or a specialized GUI application, or a simple game.
If youâre a professional software developer, you may have to work with several
C/C++/Java libraries but find the usual write/compile/test/re-compile cycle is
too slow.  Perhaps youâre writing a test suite for such a library and find
writing the testing code a tedious task.  Or maybe youâve written a program that
could use an extension language, and you donât want to design and implement a
whole new language for your application.
Python is just the language for you.
You could write a Unix shell script or Windows batch files for some of these
tasks, but shell scripts are best at moving around files and changing text data,
not well-suited for GUI applications or games. You could write a C/C++/Java
program, but it can take a lot of development time to get even a first-draft
program.  Python is simpler to use, available on Windows, macOS, and Unix
operating systems, and will help you get the job done more quickly.
Python is simple to use, but it is a real programming language, offering much
more structure and support for large programs than shell scripts or batch files
can offer.  On the other hand, Python also offers much more error checking than
C, and, being a
very-high-level language
, it has high-level data types built
in, such as flexible arrays and dictionaries.  Because of its more general data
types Python is applicable to a much larger problem domain than Awk or even
Perl, yet many things are at least as easy in Python as in those languages.
Python allows you to split your program into modules that can be reused in other
Python programs.  It comes with a large collection of standard modules that you
can use as the basis of your programs â or as examples to start learning to
program in Python.  Some of these modules provide things like file I/O, system
calls, sockets, and even interfaces to graphical user interface toolkits like
Tk.
Python is an interpreted language, which can save you considerable time during
program development because no compilation and linking is necessary.  The
interpreter can be used interactively, which makes it easy to experiment with
features of the language, to write throw-away programs, or to test functions
during bottom-up program development. It is also a handy desk calculator.
Python enables programs to be written compactly and readably.  Programs written
in Python are typically much shorter than equivalent C,  C++, or Java programs,
for several reasons:
the high-level data types allow you to express complex operations in a single
statement;
statement grouping is done by indentation instead of beginning and ending
brackets;
no variable or argument declarations are necessary.
Python is
extensible
: if you know how to program in C it is easy to add a new
built-in function or module to the interpreter, either to perform critical
operations at maximum speed, or to link Python programs to libraries that may
only be available in binary form (such as a vendor-specific graphics library).
Once you are really hooked, you can link the Python interpreter into an
application written in C and use it as an extension or command language for that
application.
By the way, the language is named after the BBC show âMonty Pythonâs Flying
Circusâ and has nothing to do with reptiles.  Making references to Monty
Python skits in documentation is not only allowed, it is encouraged!
Now that you are all excited about Python, youâll want to examine it in some
more detail.  Since the best way to learn a language is to use it, the tutorial
invites you to play with the Python interpreter as you read.
In the next chapter, the mechanics of using the interpreter are explained.  This
is rather mundane information, but essential for trying out the examples shown
later.
The rest of the tutorial introduces various features of the Python language and
system through examples, beginning with simple expressions, statements and data
types, through functions and modules, and finally touching upon advanced
concepts like exceptions and user-defined classes.
Previous topic
The Python Tutorial
Next topic
2.
Using the Python Interpreter
This Page
Report a Bug
Show Source
Â«
Navigation
index
modules
|
next
|
previous
|
Python
»
3.13.2 Documentation
»
The Python Tutorial
»
1.
Whetting Your Appetite
|
Theme
Auto
Light
Dark
|
©
Copyright
2001-2025, Python Software Foundation.
This page is licensed under the Python Software Foundation License Version 2.
Examples, recipes, and other code in the documentation are additionally licensed under the Zero Clause BSD License.
See
History and License
for more information.
The Python Software Foundation is a non-profit corporation.
Please donate.
Last updated on Apr 01, 2025 (07:50 UTC).
Found a bug
?
Created using
Sphinx
8.2.3.


================================================================================
URL: https://www.python.org/
TITLE: Welcome to Python.org
================================================================================

Welcome to Python.org
Notice:
While JavaScript is not essential for this website, your interaction with the content will be limited. Please turn JavaScript on for the full experience.
Join us in Pittsburgh, PA starting May 14, 2025. Grab your ticket today before we sell out!
REGISTER FOR PYCON US!
Get Started
Whether you're new to programming or an experienced developer, it's easy to learn and use Python.
Start with our Beginner’s Guide
Download
Python source code and installers are available for download for all versions!
Latest:
Python 3.13.2
Docs
Documentation for Python's standard library, along with tutorials and guides, are available online.
docs.python.org
Jobs
Looking for work or have a Python related position that you're trying to hire for? Our
relaunched community-run job board
is the place to go.
jobs.python.org
Latest News
More
2025-
03-14
Python 3.14.0 alpha 6 is out
2025-
03-12
PSF Distinguished Service Award Granted to Thomas Wouters
2025-
03-11
PSF Distinguished Service Award Granted to Van Lindberg
2025-
03-06
PSF Distinguished Service Award Granted to Ewa Jodlowska
2025-
03-04
Announcing Python Software Foundation Fellow Members for Q4 2024! 🎉
Upcoming Events
More
2025-
04-05
Python Communities - Yaounde
2025-
04-06
Python Conference Austria 2025
2025-
04-09
Python Meeting Düsseldorf
2025-
04-11
PyTexas 2025
2025-
04-15
Workshop: Creating Python Communities
Success Stories
More
“We feel much better equipped now to handle the challenges. And if we run into an issue, we’ll come to Caktus to hammer it out," said Stephen Johnston, VP of Engineering, at Force Therapeutics.
A Startup Healthcare Tech Firm Is Now Poised for the Future
by Caktus Group
Use Python for…
More
Web Development
:
Django
,
Pyramid
,
Bottle
,
Tornado
,
Flask
,
web2py
GUI Development
:
tkInter
,
PyGObject
,
PyQt
,
PySide
,
Kivy
,
wxPython
,
DearPyGui
Scientific and Numeric
:
SciPy
,
Pandas
,
IPython
Software Development
:
Buildbot
,
Trac
,
Roundup
System Administration
:
Ansible
,
Salt
,
OpenStack
,
xonsh
>>>
Python Software Foundation
The mission of the Python Software Foundation is to promote, protect, and advance the Python programming language, and to support and facilitate the growth of a diverse and international community of Python programmers.
Learn more
Become a Member
Donate to the PSF


